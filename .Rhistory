abline(mean(new$mpg[new$am=="M"]),0,lwd=2,col=3);
plot(mpg~disp,col=2+(am=="M"),data=new,xlab="Weight (x1000 lbs)",xlim=c(0,6), ylab="Economy (mpg)",ylim=c(0,40));
abline(mean(new$mpg[new$am=="A"]),0,lwd=2,col=2);
abline(mean(new$mpg[new$am=="M"]),0,lwd=2,col=3);
plot(mpg~disp,col=2+(am=="M"),data=new,xlab="Weight (x1000 lbs)",xlim=c(0,6), ylab="Economy (mpg)",ylim=c(0,40));
plot(mpg~disp,col=2+(am=="M"),data=new,xlab="Weight (x1000 lbs)",xlim=c(0,6), ylab="Economy (mpg)",ylim=c(0,40));
plot(mpg~wt,col=2+(am=="M"),data=new,xlab="Weight (x1000 lbs)",xlim=c(0,6), ylab="Economy (mpg)",ylim=c(0,40));
abline(mean(new$mpg[new$am=="A"]),0,lwd=2,col=2);
abline(mean(new$mpg[new$am=="M"]),0,lwd=2,col=3);
plot(disp,hp,col=2+3*(mpg-min(mpg))/(max(mpg)-min(mpg)))
?pairs
pairs(new)
pairs(new,col=2+(am=="M"))
pairs(new-am,col=2+(am=="M"))
pairs(new,col=2+(am=="M"))
summary(lm(mpg~am*wt*hp - am:wt:hp - am:wt - am:hp - am,data=new))
summary(lm(mpg~am,data=new))
summary(lm(mpg~am*wt,data=new))
summary(lm(mpg~am*wt,data=new))
summary(lm(mpg~am*wt - am,data=new))
summary(lm(mpg~am*wt - am - am:wt,data=new))
summary(lm(mpg~am*wt - am:wt,data=new))
summary(lm(mpg~am*wt - am:wt -am,data=new))
summary(lm(mpg~am*wt*hp,data=new))
summary(lm(mpg~am*wt*hp*gear,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:hear,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear - am:wt:hp,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear - am:wt:hp - wt:hp:gear,data=new))
>step
step
?step
step(lm(mpg~am*wt*hp*gear))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear - am:wt:hp - wt:hp:gear,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear - am:wt:hp - wt:hp:gear - am:hp:gear,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear - am:wt:hp - wt:hp:gear - am:hp:gear-am:hp,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear - am:wt:hp - wt:hp:gear - am:hp:gear-am:hp - am:wt,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear - am:wt:hp - wt:hp:gear - am:hp:gear-am:hp - am:wt-am:gear,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear - am:wt:hp - wt:hp:gear - am:hp:gear-am:hp - am:wt-am:gear-wt:gear,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear - am:wt:hp - wt:hp:gear - am:hp:gear-am:hp - am:wt-am:gear-wt:gear-hp:gear,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear - am:wt:hp - wt:hp:gear - am:hp:gear-am:hp - am:wt-am:gear-wt:gear-hp:gear - am,data=new))
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear - am:wt:hp - wt:hp:gear - am:hp:gear-am:hp - am:wt-am:gear-wt:gear-hp:gear - am - gear,data=new))
newmodel <- lm(mpg ~ wt + hp + wt:hp)
summary(newodel)
newmodel <- lm(mpg ~ wt + hp + wt:hp)
summary(newmodel)
summary(lm(mpg~am*wt*hp*gear - am:wt:hp:gear - am:wt:gear - am:wt:hp - wt:hp:gear - am:hp:gear-am:hp - am:wt-am:gear-wt:gear-hp:gear - am - gear,data=new))
lm(mpg ~ wt + hp + wt:hp)
summary(lm(mpg ~ wt + hp + wt:hp))
summary(lm(mpg ~ wt + hp))
newmodel <- lm(mpg ~ wt + hp + wt:hp)
summary(newmodel)
?mtcars
plot(mpg~wt,col=2+(am=="M"),data=new,xlab="Weight (x1000 lbs)",xlim=c(0,6), ylab="Economy (mpg)",ylim=c(0,40));
abline(mean(new$mpg[new$am=="A"]),0,lwd=2,col=2);
abline(mean(new$mpg[new$am=="M"]),0,lwd=2,col=3);
boxplot(mpg~am,col=2+(am=="M"),data=new,xlab="Weight (x1000 lbs)",ylab="Economy (mpg)");
pairs(new)
pairs(new,col=2+(am=="M"))
summary(lm(mpg ~ wt))
summary(lm(mpg ~ drat))
summary(lm(mpg ~ wt*drat))
summary(lm(mpg ~ wt+drat))
summary(lm(mpg ~ wt*hp))
summary(lm(mpg ~ wt*cyl))
summary(lm(mpg ~ wt*disp))
summary(lm(mpg ~ wt*hp))
summary(lm(mpg ~ wt*hp))
new$hp
new$hp/new$wt
pwr <- new$hp/new$wt
new2 <- cbind(new,pwr)
View(new2)
summary(lm(mpg ~ wt*hp*pwr))
summary(lm(mpg ~ pwr))
plot(mpg~pwr,col=2+(am=="M"),data=new2,xlab="Weight (x1000 lbs)",xlim=c(0,6), ylab="Economy (mpg)",ylim=c(0,40));
plot(mpg~pwr,col=2+(am=="M"),data=new2,xlab="Weight (x1000 lbs)", ylab="Economy (mpg)",ylim=c(0,40));
plot(mpg~pwr,col=2+(am=="M"),data=new2,xlab="Weight (x1000 lbs)", ylab="Economy (mpg)");
new <- data.frame(mtcars[,1:8],am=gsub(1,"M",gsub(0,"A",mtcars$am)),mtcars[,10:11]);
boxplot(mpg~am,col=2+(am=="M"),data=new,xlab="Weight (x1000 lbs)",ylab="Economy (mpg)");
View(new)
newmodel <- lm(mpg ~ wt + hp + wt:hp)
newmodel <- lm(mpg ~ wt + hp + wt:hp, data=new)
plot(fit)
plot(newmodel)
par = mfrow(c(2,2));plot(newmodel)
par(mfrow=c(2,2));plot(newmodel)
install.packages(c("class", "httr", "markdown", "meta", "mgcv", "mime", "multcomp", "RANN", "RCurl", "sandwich", "swirl"))
quit()
install.packages("metafor")
install.packages(c("class", "mgcv"))
install.packages("mass")
install.packages("MASS")
librry(MASS)
library(MASS)
?shuttle
head(shuttle)
shuttle$use
shuttle$sign
shuttle$wind
logisticRegAutolander <- glm(shuttle$use ~ shuttle$wind, data = shuttle)
logisticRegAutolander <- glm(shuttle$use ~ shuttle$wind, data = shuttle, family = "binomial")
summary(logisticRegAutolander)
exp(-0.25131)
exp(-0.03181)
pairs(shuttle$use ~ shuttle$wind, data = shuttle)
plot(shuttle$use ~ shuttle$wind, data = shuttle)
shuttle$wind
?glm
shuttle$use
plot(shuttle$use ~ shuttle$wind, data = shuttle)
summary(logisticRegAutolander)
logisticRegAutolander$confint
confint(logisticRegAutolander)
exp(confint(logisticRegAutolander))
library(MASS)
?shuttle
shuttle$wind
shuttle$use
shuttle$use == "auto"
?if
??if
?esoph
head(esoph)
head(esoph,20)
?shuttle
head(shuttle,10)
glm(shuttle$use~shuttle$wind)
glm(shuttle$use~shuttle$wind,binomial)
shuttleLogit <- glm(shuttle$use~shuttle$wind,binomial)
summary(shuttleLogit)
coeff(shuttleLogit)
coeffs(shuttleLogit)
shuttleLogit$coeffs
shuttleLogit$coeff
exp(shuttleLogit$coeff)
shuttle$wind
shuttle$use
shuttle$use == "auto"
autolanding <- as.numeric(shuttle$use == "auto")
head(autolanding)
autolanding
cbind(autolanding,shuttle$wind)
shuttle$wind
data.frame(autolanding,shuttle$wind)
new <- data.frame(autolanding,shuttle$wind)
names(new)
names(new) <- c("auto","wind")
head(new)
glm(auto~wind,data=new,family="binomial")
logit <- glm(auto~wind,data=new,family="binomial")
summary(logit)
logit$coeffs
logit$coeff
exp(logit$coeff)
1/1.285714
shuttle$magn
new <- data.frame(autolanding,shuttle$wind,shuttle$magn)
new
head(new)
names(new) <- c("auto","wind","magn")
glm(auto~wind*magn, data = new, family = "binomial")
logit2 <- glm(auto~wind*magn, data = new, family = "binomial")
summary(logit2)
plot(logit2)
summary(logit2)
logit2 <- glm(auto~wind+magn, data = new, family = "binomial")
summary(logit2)
exp(0.3635)
logit <- glm(auto~wind, data = new, family = "binomial")
summary(logit)
exp(0.03181)
exp(-0.03181)
logit2 <- glm(auto~wind+magn, data = new, family = "binomial")
summary(logit2)
exp(-0.03201)
?InsectSprays
head(InsectSprays,20)
glm(InsectSprays$count~InsectSprays$spray, family="poisson")
insectPois <- glm(InsectSprays$count~InsectSprays$spray, family="poisson")
summary(insectPois)
insectPois <- glm(InsectSprays$count~InsectSprays$spray-1, family="poisson")
summary(insectPois)
exp(2.73003)
1/2.73
exp(-2.73003)
2.67415/2.73003
exp(0.9795314)
1/2.66
InsectSprays$spray
insectPois <- glm(InsectSprays$count~InsectSprays$spray, family="poisson")
summary(insectPois)
exp(-0.05588)
15+16+(15*6/7)+(15*5/6)
15+16+(15*6/7)+(15*5/6)+40
install.packages("lattice")
??lattice
?lattice
install.packages("ggplot2")
?par
install.packages("readImages")
install.packages("png")
library(png)
?readPNG
img <- readPNG(system.file("img", "Rlogo.png", package="png"))
rasterImage(img)
rasterImage(img, 1.2, 1.27, 1.8, 1.73)
plot.new()
rasterImage(img, 1.2, 1.27, 1.8, 1.73)
plot(1:2)
rasterImage(img, 1.2, 1.27, 1.8, 1.73)
plot(1:2,type="n")
rasterImage(img, 1.2, 1.27, 1.8, 1.73)
img <- readPNG("plot3.png")
myDataZip <- "/Users/lenw/Documents/Coursera_Offline/Data_Science/Data_Exp_Project1/exdata-data-household_power_consumption.zip"
myDataText <- "/Users/lenw/Documents/Coursera_Offline/Data_Science/Data_Exp_Project1/household_power_consumption.txt"
myOutputPath <- "/Users/lenw/Documents/repo_DataExploration/ExData_Plotting1"
#define default working directory
setwd(myOutputPath)
img <- readPNG("plot3.png")
plot(1:2,type="m")
plot(1:2,type="n")
rasterImage(img)
rasterImage(img, 1.2, 1.27, 1.8, 1.73)
plot(rasterImage(img, 1.2, 1.27, 1.8, 1.73))
plot(1:2,type="n")
rasterImage(img, 1.2, 1.27, 1.8, 1.73)
?rasterImage
plot(1:2,type="n")
rasterImage(img, 1.2, 1.27, 1.8, 1.73)
rasterImage(img, 1.2, 1.2, 1.8, 1.8)
plot(0:1,type="n")
rasterImage(img, 0, 0, 1, 1)
rasterImage(img, 0.2, 0.2, 1, 1)
plot(1:2,type="n")
plot(0:1,type="n")
plot(c(0:1),c(0:1),type="n")
rasterImage(img, 0, 0, 1, 1)
plot(c(0:1),c(0:1),type="n",axis=FALSE)
?plot
#only read a part of the data to get the names of the columns
smalltest <- read.table(myDataText,sep=";",header=T,na.strings="?",colClasses="character",nrows=5)
mynames <- names(smalltest)
#read in only the part of the file that corresponds to the dates of interest
mydata <- read.table(myDataText,sep=";",header=F,na.strings="?",colClasses="character",skip=66637,nrows=2880)
names(mydata) <- mynames
#coerce the dates and times into POSIX format as R-style
temp <- sapply(1:2880,function(x) paste(mydata$Date[x],mydata$Time[x]))
RDate <- strptime(as.character(temp),"%d/%m/%Y %H:%M:%S")
#---------------------------------------------------------
#extract the Global_active_power values to be plotted
gap <- as.numeric(mydata$Global_active_power)
#extract the Voltage values to be plotted
volts <- as.numeric(mydata$Voltage)
#extract the Global_reactive_power values to be plotted
grp <- as.numeric(mydata$Global_reactive_power)
#extract the three Sub_metering values to be plotted
sm1 <- as.numeric(mydata$Sub_metering_1)
sm2 <- as.numeric(mydata$Sub_metering_2)
sm3 <- as.numeric(mydata$Sub_metering_3)
#generate the base plot series filling by row
par(mfrow=c(2,2))
par(ps = 16)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
#legend("topright",lty=1,legend=c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplot
?splom
?par
#only read a part of the data to get the names of the columns
smalltest <- read.table(myDataText,sep=";",header=T,na.strings="?",colClasses="character",nrows=5)
mynames <- names(smalltest)
#read in only the part of the file that corresponds to the dates of interest
mydata <- read.table(myDataText,sep=";",header=F,na.strings="?",colClasses="character",skip=66637,nrows=2880)
names(mydata) <- mynames
#coerce the dates and times into POSIX format as R-style
temp <- sapply(1:2880,function(x) paste(mydata$Date[x],mydata$Time[x]))
RDate <- strptime(as.character(temp),"%d/%m/%Y %H:%M:%S")
#---------------------------------------------------------
#extract the Global_active_power values to be plotted
gap <- as.numeric(mydata$Global_active_power)
#extract the Voltage values to be plotted
volts <- as.numeric(mydata$Voltage)
#extract the Global_reactive_power values to be plotted
grp <- as.numeric(mydata$Global_reactive_power)
#extract the three Sub_metering values to be plotted
sm1 <- as.numeric(mydata$Sub_metering_1)
sm2 <- as.numeric(mydata$Sub_metering_2)
sm3 <- as.numeric(mydata$Sub_metering_3)
#generate the base plot series filling by row
par(mfrow=c(2,2))
par(ps = 16)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
#legend("topright",lty=1,legend=c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
?show
par(mfrow=c(2,2))
par(ps = 16)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,legend=c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
par(mfrow=c(2,2))
par(ps = 16)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
#generate the base plot series filling by row
par(mfrow=c(2,2))
par(ps = 16)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
?legend
ar(mfrow=c(2,2))
par(ps = 16)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,bty="n",legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
par(mfrow=c(2,2))
par(ps = 16)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,bty="n",y.intersp=0,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
par(mfrow=c(2,2))
par(ps = 16)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,bty="n",y.intersp=0.5,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
#generate the base plot series filling by row
par(mfrow=c(2,2))
par(ps = 16)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,bty="n",y.intersp=0.8,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
par(mfrow=c(2,2))
par(ps = 16)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,xpd=NA,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
leg.txt <- c("Setosa     Petals", "Setosa     Sepals",
"Versicolor Petals", "Versicolor Sepals")
y.leg <- c(4.5, 3, 2.1, 1.4, .7)
cexv  <- c(1.2, 1, 4/5, 2/3, 1/2)
matplot(c(1,8), c(0,4.5), type = "n", xlab = "Length", ylab = "Width",
main = "Petal and Sepal Dimensions in Iris Blossoms")
for (i in seq(cexv)) {
text  (1, y.leg[i]-.1, paste("cex=",formatC(cexv[i])), cex=.8, adj = 0)
legend(3, y.leg[i], leg.txt, pch = "sSvV", col = c(1, 3), cex = cexv[i])
}
par(mfrow=c(1,1))
leg.txt <- c("Setosa     Petals", "Setosa     Sepals",
"Versicolor Petals", "Versicolor Sepals")
y.leg <- c(4.5, 3, 2.1, 1.4, .7)
cexv  <- c(1.2, 1, 4/5, 2/3, 1/2)
matplot(c(1,8), c(0,4.5), type = "n", xlab = "Length", ylab = "Width",
main = "Petal and Sepal Dimensions in Iris Blossoms")
for (i in seq(cexv)) {
text  (1, y.leg[i]-.1, paste("cex=",formatC(cexv[i])), cex=.8, adj = 0)
legend(3, y.leg[i], leg.txt, pch = "sSvV", col = c(1, 3), cex = cexv[i])
}
par(mfrow=c(2,2))
par(ps = 16)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,cex=0.5,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
par(mfrow=c(2,2))
par(ps = 16)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,cex=0.5,y.intersp=0.6,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
dev.copy(png,"plot4.png",height=480,width=480,units="px"); dev.off();
#generate the base plot series filling by row
par(mfrow=c(2,2))
par(ps = 14)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,cex=0.6,y.intersp=0.5,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
#copy the plot from the screen device to the PNG file device at 480x480 pixel size
#save as plot4.png
dev.copy(png,"plot4.png",height=480,width=480,units="px"); dev.off();
#generate the base plot series filling by row
par(mfrow=c(2,2))
par(ps = 14)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,bty="n",cex=0.6,y.intersp=0.4,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylab="Global_reactive_power",lwd=1)
#copy the plot from the screen device to the PNG file device at 480x480 pixel size
#save as plot4.png
dev.copy(png,"plot4.png",height=480,width=480,units="px"); dev.off();
#generate the base plot series filling by row
par(mfrow=c(2,2))
par(ps = 14)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,bty="n",cex=0.6,y.intersp=0.4,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",xlim=c(0,0.5),ylab="Global_reactive_power",lwd=1)
#generate the base plot series filling by row
par(mfrow=c(2,2))
par(ps = 14)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,bty="n",cex=0.6,y.intersp=0.4,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylim=c(0,0.5),ylab="Global_reactive_power",lwd=1)
#copy the plot from the screen device to the PNG file device at 480x480 pixel size
#save as plot4.png
dev.copy(png,"plot4.png",height=480,width=480,units="px"); dev.off();
#generate the base plot series filling by row
par(mfrow=c(2,2))
par(ps = 14)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,bty="n",cex=0.7,font=2,y.intersp=0.4,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylim=c(0,0.5),ylab="Global_reactive_power",lwd=1)
#copy the plot from the screen device to the PNG file device at 480x480 pixel size
#save as plot4.png
dev.copy(png,"plot4.png",height=480,width=480,units="px"); dev.off();
?font
#generate the base plot series filling by row
par(mfrow=c(2,2))
par(ps = 14)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,bty="n",cex=0.7,y.intersp=0.4,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylim=c(0,0.5),ylab="Global_reactive_power",lwd=1)
#copy the plot from the screen device to the PNG file device at 480x480 pixel size
#save as plot4.png
dev.copy(png,"plot4.png",height=480,width=480,units="px"); dev.off();
#generate the base plot series filling by row
par(mfrow=c(2,2))
par(ps = 12)
plot(RDate,gap, main="",type="l",xlab="",ylab="Global Active Power",lwd=1)
plot(RDate,volts, main="",type="l",xlab="datetime",ylab="Voltage",lwd=1)
plot(RDate,sm1, main="",type="l",xlab="",ylab="Energy sub metering",lwd=1)
lines(RDate,sm2,col="red")
lines(RDate,sm3,col="blue")
legend("topright",lty=1,bty="n",cex=0.6,y.intersp=0.4,legend = c("Sub_metering_1    ","Sub_metering_2    ","Sub_metering_3    "),col=c("black","red","blue"))
plot(RDate,grp, main="",type="l",xlab="datetime",ylim=c(0,0.5),ylab="Global_reactive_power",lwd=1)
#copy the plot from the screen device to the PNG file device at 480x480 pixel size
#save as plot4.png
dev.copy(png,"plot4.png",height=480,width=480,units="px"); dev.off();
